---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-fluentd-elasticsearch
  namespace: "{{ namespace }}"
  labels:
    app.kubernetes.io/name: fluentd-elasticsearch
    app.kubernetes.io/instance: fluentd
    app.kubernetes.io/version: "2.7.0"
    app.kubernetes.io/managed-by: Ansible
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd-elasticsearch
      app.kubernetes.io/instance: fluentd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluentd-elasticsearch
        helm.sh/chart: fluentd-elasticsearch-5.0.1
        app.kubernetes.io/instance: fluentd
        app.kubernetes.io/version: "2.7.0"
        app.kubernetes.io/managed-by: Helm
        kubernetes.io/cluster-service: "true"
      annotations:
        checksum/config: 14cb3673b1e8e0e232ed1d7db7ef142654936543eda213357941986abec8c1e3
    spec:
      serviceAccountName: fluentd-fluentd-elasticsearch
      containers:
        - name: fluentd-fluentd-elasticsearch
          image:  "quay.io/fluentd_elasticsearch/fluentd:v2.7.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: FLUENTD_ARGS
              value: "--no-supervisor -q"
            - name: OUTPUT_HOST
              value: "elasticsearch.default.svc.cluster.local"
            - name: OUTPUT_PORT
              value: "9200"
            - name: OUTPUT_PATH
              value: ""
            - name: LOGSTASH_PREFIX
              value: "logstash"
            - name: OUTPUT_SCHEME
              value: "http"
            - name: OUTPUT_SSL_VERIFY
              value: "true"
            - name: OUTPUT_SSL_VERSION
              value: "TLSv1_2"
            - name: OUTPUT_TYPE_NAME
              value: "_doc"
            - name: OUTPUT_BUFFER_CHUNK_LIMIT
              value: "2M"
            - name: OUTPUT_BUFFER_QUEUE_LIMIT
              value: "8"
            - name: OUTPUT_LOG_LEVEL
              value: "info"
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            {}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: libsystemddir
              mountPath: /usr/lib64
              readOnly: true
            - name: config-volume
              mountPath: /etc/fluent/config.d  #pointing to fluentd Dockerfile
          livenessProbe:
            initialDelaySeconds: 600
            periodSeconds: 60
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${STUCK_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
                    exit 1;
                  fi; touch -d "${STUCK_THRESHOLD_SECONDS} seconds ago" /tmp/marker-stuck; if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-stuck -print -quit)" ]; then
                    rm -rf /var/log/fluentd-buffers;
                    exit 1;
                  fi; touch -d "${LIVENESS_THRESHOLD_SECONDS} seconds ago" /tmp/marker-liveness; if [ -z "$(find /var/log/fluentd-buffers -type d -newer /tmp/marker-liveness -print -quit)" ]; then
                    exit 1;
                  fi;
          ports:
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        # It is needed to copy systemd library to decompress journals
        - name: libsystemddir
          hostPath:
            path: /usr/lib64
        - name: config-volume
          configMap:
            name: fluentd-fluentd-elasticsearch
...
