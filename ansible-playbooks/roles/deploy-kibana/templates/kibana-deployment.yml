---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: "{{ namespace }}"
  labels:
    app: kibana
    release: "kibana"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kibana
      release: "kibana"
  template:
    metadata:
      labels:
        app: kibana
        release: "kibana"
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: kibana
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.elastic.co/kibana/kibana:7.4.1"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "{{ esUrl }}"
            - name: SERVER_HOST
              value: "0.0.0.0"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  http () {
                      local path="${1}"
                      set -- -XGET -s --fail

                      if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                        set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                      fi

                      STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                      if [[ "${STATUS}" -eq 200 ]]; then
                        exit 0
                      fi

                      echo "Error: Got HTTP code ${STATUS} but expected a 200"
                      exit 1
                  }

                  http "/app/kibana"
          ports:
            - containerPort: 5601
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 500Mi
...
